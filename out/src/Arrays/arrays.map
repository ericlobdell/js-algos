{"version":3,"file":"arrays.js","sources":["@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","/Users/eric/Code/Projects/Data Structures And Algos JS/src/Arrays/arrays.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/6"],"names":[],"mappings":"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","sourcesContent":["System.register($__placeholder__0, [], $__placeholder__1);","function() {\n      $__placeholder__0\n    }","var __moduleName = $__placeholder__0;","/**\n * Created by eric on 5/12/14.\n */\n(function ( window ) {\n    var sum = function ( runningTotal, currentValue ) {\n        return runningTotal + currentValue;\n    };\n\n    function grades () {\n        return {\n            dataStore: [],\n            add: function ( grade ) {\n                this.dataStore.push( grade );\n            },\n            average: function () {\n                return this.dataStore.reduce( sum ) / this.dataStore.length;\n            }\n        }\n    };\n\n    function words ( arr ) {\n        return {\n            print: function () {\n                return arr.join( \", \" );\n            },\n            printr: function () {\n                return arr.reverse().join( \", \" );\n            }\n        }\n    };\n\n    Array.matrix = function ( numRows, numCols, initial ) {\n        var arr = [];\n        for ( var i = 0; i < numRows; ++i ) {\n            var columns = [];\n            for ( var j = 0; j < numCols; ++j ) {\n                columns[j] = initial;\n            }\n            arr[i] = columns;\n        }\n        return arr;\n    };\n    function temps () {\n        // using fixed values for this exercise\n        var NUM_ROWS = 4,\n            NUM_COLS = 7\n\n        function getPosition ( date ) {\n            if ( date < 1 || date > 28 )\n                throw new Error( \"I can only use dates between 1 and 28!\" );\n\n            var weekPosition = Math.floor( date / NUM_COLS );\n            var dayPosition = date % NUM_COLS;\n\n            return {\n                week: weekPosition,\n                day: dayPosition\n            }\n        }\n\n        return {\n            dataStore: Array.matrix( NUM_ROWS, NUM_COLS, 0 ),\n            add: function ( temp, date ) {\n                date = date || 1;\n                var position = getPosition( date );\n                this.dataStore[position.week][position.day] = temp;\n            },\n            weekAverage: function ( week ) {\n                var weekTemps = this.dataStore[week];\n                return weekTemps.reduce( sum ) / NUM_COLS;\n            },\n            monthAverage: function () {\n                var total = 0, i = 0,\n                    totalDays = ( NUM_ROWS * NUM_COLS );\n                for ( ; i < NUM_ROWS; ++i ) {\n                    total += this.dataStore[i].reduce( sum );\n                }\n\n                return total / totalDays;\n            },\n            displayWeekAverage: function ( weekIndex ) {\n                return \"Week \" + (weekIndex + 1) + \"'s average temp was \" + this.weekAverage( weekIndex ) + \".\\n\";\n            },\n            displayAllWeekAverages: function () {\n                var i = 0, ret = \"\";\n                for ( ; i < NUM_ROWS; ++i ) {\n                    ret += this.displayWeekAverage( i );\n                }\n\n                return ret;\n            }\n\n        }\n\n\n    }\n\n    function letters () {\n        return {\n            dataStore: [],\n            add: function ( letter ) {\n                this.dataStore.push( letter );\n            },\n            toString: function () {\n                return this.dataStore.join( \"\" );\n            }\n        }\n    }\n\n    window.Letters = letters;\n    window.Temps = temps;\n    window.Grades = grades;\n    window.Words = words;\n\n})( window || {} );","$traceurRuntime.setProperty($__placeholder__0,\n          $__placeholder__1, $__placeholder__2)","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","return $__placeholder__0","System.get($__placeholder__0 +'')"]}